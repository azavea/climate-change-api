#!/bin/bash
set -e

if [[ -n "${CC_DEBUG}" ]]; then
    set -x
fi

if [[ -n "${GIT_COMMIT}" ]]; then
    GIT_COMMIT="${GIT_COMMIT:0:7}"
else
    GIT_COMMIT="$(git rev-parse --short HEAD)"
fi

echo "GIT_COMMIT:${GIT_COMMIT}"
DIR="$(dirname "$0")"

function usage() {
    echo -n \
         "Usage: $(basename "$0")
Build application for staging or a release.
"
}

if [ "${BASH_SOURCE[0]}" = "${0}" ]; then
    if [ "${1:-}" = "--help" ]; then
        usage
    else
        echo "Building django and nginx"
        GIT_COMMIT="${GIT_COMMIT}" docker-compose \
                  -f "${DIR}/../docker-compose.yml" \
                  -f "${DIR}/../docker-compose.test.yml" \
                  build django nginx

        echo "Running tests"
        GIT_COMMIT="${GIT_COMMIT}" ${DIR}/test
        echo "All tests pass!"

        echo "Creating test user..."
        echo "ClimateUser.objects.create_superuser('testuser@testing.com','thisisatest')" | ./scripts/console django "./manage.py shell_plus"

        echo "Testing endpoints"
        dredd

        echo "Building docs"
        docker-compose \
            run --rm --entrypoint make -w /opt/doc \
            django html

        echo "[DRY RUN] Uploading docs and static files to S3..."

        aws s3 sync --dryrun \
          "${DIR}/../nginx/srv/dist/html" "s3://${CC_DOCS_FILES_BUCKET}"

        # Since we're just running a test here, we unset the GIT_COMMIT so that
        # `collectstatic` doesn't try to upload to S3
        GIT_COMMIT="" docker-compose \
            -f docker-compose.yml \
            -f docker-compose.test.yml \
            run --rm --no-deps --entrypoint "./manage.py" \
            django collectstatic --noinput

        echo "[DRY RUN] Upload complete!"
    fi
fi
