#!/bin/bash

set -e

function usage() {
    echo -n \
"Usage: $(basename "$0")

Run application tests.

"
}

if [[ -n "${GIT_COMMIT}" ]]; then
    GIT_COMMIT="${GIT_COMMIT:0:7}"
else
    GIT_COMMIT="$(git rev-parse --short HEAD)"
fi

CC_ENVIRONMENT="${CC_ENVIRONMENT:-development}"

DIR="$(dirname "$0")"

function createTestUser() {
    echo "Creating test user"
    echo "ClimateUser.objects.create_superuser('testuser@testing.com','thisisatest')" | ./scripts/console django "./manage.py shell_plus"
}

function deleteTestUser() {
    echo "Deleting test user"
    echo "ClimateUser.objects.get(email='testuser@testing.com').delete()" | ./scripts/console django "./manage.py shell_plus"
}

function interceptError() {
    #Catch and clean upon bash error to ensure testing idempotence
    exitcode=$?
    deleteTestUser
    exit $exitcode
}

function setComposeArgs(){
    if [ "${CC_ENVIRONMENT}" = "jenkins" ]
    then
        DOCKER_COMPOSE_OPTS="-f ${DIR}/../docker-compose.yml -f ${DIR}/../docker-compose.test.yml"
    else
        # If running in development, don't test a cc-api image.
        DOCKER_COMPOSE_OPTS="-f ${DIR}/../docker-compose.yml"
    fi
    echo "Running in ${CC_ENVIRONMENT} mode."
}

if [ "${BASH_SOURCE[0]}" = "${0}" ]
then
    if [ "${1:-}" = "--help" ]
    then
        usage
    else
        setComposeArgs

        docker-compose \
            run --rm --entrypoint "./manage.py" \
            django migrate --noinput

        docker-compose \
            run --rm --entrypoint "./manage.py" \
            django loaddata scenarios

        docker-compose \
            run --rm --entrypoint "./manage.py" \
            django loaddata climate-models

        # if there are no violations, flake8 doesn't write to file
        # start with file present and empty
        set +e
        echo "Remove linter output file, if present"
        docker-compose \
            run --rm --entrypoint "rm" \
            django violations.txt
        set -e

        echo "Running python linter"
        docker-compose \
            run --rm --entrypoint "flake8" \
            django --output-file=violations.txt --exit-zero --tee

        trap interceptError ERR
        echo "Testing endpoints"
        docker-compose \
            -f docker-compose.yml \
            run dredd
        deleteTestUser
    fi
    exit
fi
