# -*- coding: utf-8 -*-
# Generated by Django 1.10.7 on 2017-06-07 20:00
from __future__ import unicode_literals

import climate_data.models
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


def forward_migration(apps, schema_editor):
    ClimateData = apps.get_model('climate_data', 'ClimateData')
    ClimateDataYear = apps.get_model('climate_data', 'ClimateDataYear')
    ClimateDataSource = apps.get_model('climate_data', 'ClimateDataSource')
    ClimateDataCell = apps.get_model('climate_data', 'ClimateDataCell')
    for cell in ClimateDataCell.objects.all():
        for source in ClimateDataSource.objects.only('id').iterator():
            data = ClimateData.objects.filter(data_source=source, map_cell=cell).order_by('day_of_year')  # NOQA
            ClimateDataYear.objects.create(
                map_cell=cell,
                data_source=source,
                tasmin=list(map(lambda x: x.tasmin, data)),
                tasmax=list(map(lambda x: x.tasmax, data)),
                pr=list(map(lambda x: x.pr, data))
            )


def backwards_migration(apps, schema_editor):
    ClimateDataYear = apps.get_model('climate_data', 'ClimateDataYear')
    ClimateDataYear.objects.all().delete()


class Migration(migrations.Migration):

    dependencies = [
        ('climate_data', '0041_auto_20170414_1806'),
    ]

    operations = [
        migrations.CreateModel(
            name='ClimateDataYear',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('tasmin', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(), help_text='Daily Minimum Near-Surface Air Temperature, Kelvin', size=None)),
                ('tasmax', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(), help_text='Daily Maximum Near-Surface Air Temperature, Kelvin', size=None)),
                ('pr', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(), help_text='Precipitation (mean of the daily precipitation rate), kg m-2 s-1', size=None)),
                ('data_source', climate_data.models.TinyForeignKey(on_delete=django.db.models.deletion.CASCADE, to='climate_data.ClimateDataSource')),
                ('map_cell', climate_data.models.TinyForeignKey(on_delete=django.db.models.deletion.CASCADE, to='climate_data.ClimateDataCell')),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='climatedatayear',
            unique_together=set([('map_cell', 'data_source')]),
        ),
        migrations.AlterIndexTogether(
            name='climatedatayear',
            index_together=set([('map_cell', 'data_source')]),
        ),
        migrations.RunPython(forward_migration, backwards_migration),
    ]
